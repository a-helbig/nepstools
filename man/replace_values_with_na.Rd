% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/misc_functions.R
\name{replace_values_with_na}
\alias{replace_values_with_na}
\title{Set missings in dataframe to NA}
\usage{
replace_values_with_na(
  data,
  vars = NULL,
  values_to_replace = c(seq(-99, -90), seq(-56, -51), seq(-29, -22))
)
}
\arguments{
\item{data}{A dataframe to apply the function to.}

\item{vars}{Specify variables where missing values should be replaced with NA. If set to NULL, all variables will be used.}

\item{values_to_replace}{Specify values that should be replaced with NA. Default are all standard NEPS missing codes.}
}
\value{
A dataframe.
}
\description{
`replace_values_with_na()` sets NEPS specific missing codes to NA. Default missing codes are c(seq(-99, -90), seq(-56, -51), seq(-29, -22)). If only specific variables should be taken into account, use the vars argument and supply a vector of variable names.
}
\examples{
# Example with NEPS SC6 semantic structures spGap file
path <- system.file("extdata", "SC6_spGap_S_15-0-0.dta", package = "nepstools")
df_neps <- read_neps(path, col_select = c("ID_t", "ts2912m"))

# create some artificial datapoints
artificial_datapoints <- data.frame(
 ID_t = c(1, 2, 3, 4, 5),
 ts2912m = c(-97, 12, NA, 4, -98))

# add these artificial datapoints to the empty neps dataset
df_neps <- rbind(df_neps, artificial_datapoints)
print(df_neps)

df_neps_replaced <- replace_values_with_na(df_neps)
print(df_neps_replaced)

# Example with a vector
v <- c(1, -97, 3, -29, 5)
replace_values_with_na(v)


}
